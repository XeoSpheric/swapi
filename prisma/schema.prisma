generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Films {
  id            BigInt          @id(map: "films_pkey") @default(autoincrement())
  created       DateTime?       @default(now()) @db.Timestamptz(6)
  title         String          @db.VarChar
  episode_id    BigInt          @unique
  opening_crawl String?         @db.VarChar
  director      String?         @db.VarChar
  release_date  String?         @db.VarChar
  edited        DateTime?       @default(now()) @db.Timestamptz(6)
  producer      String[]        @db.VarChar
  PeopleFilm    PeopleFilm[]
  PeopleVehicle PeopleVehicle[]
  PlanetFilm    PlanetFilm[]
  StarshipFilm  StarshipFilm[]
  VehicleFilm   VehicleFilm[]
}

model People {
  id             BigInt           @id @default(autoincrement())
  created        DateTime?        @default(now()) @db.Timestamptz(6)
  edited         DateTime?        @default(now()) @db.Timestamptz(6)
  name           String           @db.VarChar
  birth_year     String?          @db.VarChar
  eye_color      String?          @db.VarChar
  gender         String?          @db.VarChar
  hair_color     String?          @db.VarChar
  height         String?          @db.VarChar
  mass           String?          @db.VarChar
  skin_color     String?          @db.VarChar
  homeworld      BigInt?
  Planet         Planet?          @relation(fields: [homeworld], references: [id], onDelete: NoAction, onUpdate: NoAction)
  PeopleFilm     PeopleFilm[]
  PeoplePlanet   PeoplePlanet[]
  PeopleSpecies  PeopleSpecies[]
  PeopleStarship PeopleStarship[]
  PeopleVehicle  PeopleVehicle[]
  StarshipFilm   StarshipFilm[]
}

model PeopleFilm {
  id        BigInt @id @default(autoincrement())
  film_id   BigInt
  people_id BigInt
  Films     Films  @relation(fields: [film_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  People    People @relation(fields: [people_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model PeoplePlanet {
  id        BigInt @id(map: "People-Planet_pkey") @default(autoincrement())
  planet_id BigInt
  people_id BigInt
  People    People @relation(fields: [people_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Planet    Planet @relation(fields: [planet_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model PeopleSpecies {
  id         BigInt  @id(map: "People-Species_pkey") @default(autoincrement())
  people_id  BigInt
  species_id BigInt
  People     People  @relation(fields: [people_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Species    Species @relation(fields: [species_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Planet {
  id              BigInt          @id(map: "planets_pkey")
  climate         String?         @db.VarChar
  created         DateTime?       @default(now()) @db.Timestamptz(6)
  diameter        String?         @db.VarChar
  edited          DateTime?       @default(now()) @db.Timestamptz(6)
  gravity         String?         @db.VarChar
  name            String?         @db.VarChar
  orbital_period  String?         @db.VarChar
  population      String?         @db.VarChar
  rotation_period String?         @db.VarChar
  terrain         String?         @db.VarChar
  People          People[]
  PeoplePlanet    PeoplePlanet[]
  PlanetFilm      PlanetFilm[]
  Species         Species[]
  SpeciesPlanet   SpeciesPlanet[]
}

model PlanetFilm {
  id        BigInt @id(map: "Planet-Film_pkey") @default(autoincrement())
  film_id   BigInt
  planet_id BigInt
  Films     Films  @relation(fields: [film_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Planet    Planet @relation(fields: [planet_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Species {
  id               BigInt          @id @default(autoincrement())
  created          DateTime?       @default(now()) @db.Timestamptz(6)
  edited           DateTime?       @default(now()) @db.Timestamptz(6)
  name             String?         @db.VarChar
  classification   String?         @db.VarChar
  designation      String?         @db.VarChar
  average_height   String?         @db.VarChar
  average_lifespan String?         @db.VarChar
  eye_colors       String?         @db.VarChar
  hair_colors      String?         @db.VarChar
  skin_colors      String?         @db.VarChar
  language         String?         @db.VarChar
  homeworld        BigInt?
  Planet           Planet?         @relation(fields: [homeworld], references: [id], onDelete: NoAction, onUpdate: NoAction)
  PeopleSpecies    PeopleSpecies[]
  SpeciesPlanet    SpeciesPlanet[]
}

model SpeciesPlanet {
  id         BigInt  @id(map: "Species-Planet_pkey") @default(autoincrement())
  planet_id  BigInt
  species_id BigInt
  Planet     Planet  @relation(fields: [planet_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Species    Species @relation(fields: [species_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model PeopleStarship {
  id          BigInt   @id @default(autoincrement())
  people_id   BigInt
  starship_id BigInt
  People      People   @relation(fields: [people_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Starship    Starship @relation(fields: [starship_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model PeopleVehicle {
  id         BigInt  @id @default(autoincrement())
  vehicle_id BigInt
  people_id  BigInt
  Films      Films   @relation(fields: [people_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "PeopleVehicle_film_id_fkey")
  People     People  @relation(fields: [people_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Vehicle    Vehicle @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Starship {
  id                     BigInt           @id @default(autoincrement())
  name                   String?          @db.VarChar
  model                  String?          @db.VarChar
  starship_class         String?          @db.VarChar
  manufacturer           String?          @db.VarChar
  cost_in_credits        String?          @db.VarChar
  length                 String?          @db.VarChar
  crew                   String?          @db.VarChar
  passengers             String?          @db.VarChar
  max_atmosphering_speed String?          @db.VarChar
  hyperdrive_rating      String?          @db.VarChar
  MGLT                   String?          @db.VarChar
  cargo_capacity         String?          @db.VarChar
  consumables            String?          @db.VarChar
  created                DateTime?        @default(now()) @db.Timestamptz(6)
  edited                 DateTime?        @default(now()) @db.Timestamptz(6)
  PeopleStarship         PeopleStarship[]
  StarshipFilm           StarshipFilm[]
}

model StarshipFilm {
  id          BigInt   @id @default(autoincrement())
  film_id     BigInt
  starship_id BigInt
  People      People   @relation(fields: [film_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "StarshipFilm_people_id_fkey")
  Films       Films    @relation(fields: [film_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Starship    Starship @relation(fields: [starship_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Vehicle {
  id                     BigInt          @id @default(autoincrement())
  name                   String?         @db.VarChar
  model                  String?         @db.VarChar
  vehicle_class          String?         @db.VarChar
  manufacturer           String?         @db.VarChar
  cost_in_credits        String?         @db.VarChar
  length                 String?         @db.VarChar
  crew                   String?         @db.VarChar
  passengers             String?         @db.VarChar
  max_atmosphering_speed String?         @db.VarChar
  cargo_capacity         String?         @db.VarChar
  consumables            String?         @db.VarChar
  created                DateTime?       @default(now()) @db.Timestamptz(6)
  edited                 DateTime?       @default(now()) @db.Timestamptz(6)
  PeopleVehicle          PeopleVehicle[]
  VehicleFilm            VehicleFilm[]
}

model VehicleFilm {
  id         BigInt  @id @default(autoincrement())
  vehicle_id BigInt
  film_id    BigInt
  Films      Films   @relation(fields: [film_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Vehicle    Vehicle @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
